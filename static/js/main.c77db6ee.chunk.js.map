{"version":3,"sources":["components/question.js","components/home.js","components/results.js","App.js","reportWebVitals.js","index.js"],"names":["Question","props","className","active","id","number","text","type","name","value","answer1score","htmlFor","answer1","answer2score","answer2","answer3score","answer3","onClick","prevQuestion","nextQuestion","to","Home","useState","currentQuestion","setCurrentQuestion","useEffect","document","querySelectorAll","forEach","question","classList","add","remove","myQuizAnswers","JSON","parse","localStorage","getItem","answer","score","querySelector","checked","input","addEventListener","parseInt","setItem","stringify","Results","totalScore","rating","percentageScore","Math","round","max","doc","jsPDF","save","clear","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c77db6ee.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Question = (props) => {\n  return (\n    <div className={`question${props.active === true ? ' active' : ''}`} id={props.number}>\n      <p>{props.text}</p>\n      <div>\n        <input type=\"radio\" name={`question${props.number}`} id={`q${props.number}_1`} value={props.answer1score} />\n        <label htmlFor={`q${props.number}_1`}>{props.answer1}</label>\n        <input type=\"radio\" name={`question${props.number}`} id={`q${props.number}_2`} value={props.answer2score} />\n        <label htmlFor={`q${props.number}_2`}>{props.answer2}</label>\n        <input type=\"radio\" name={`question${props.number}`} id={`q${props.number}_3`} value={props.answer3score} />\n        <label htmlFor={`q${props.number}_3`}>{props.answer3}</label>\n      </div>\n      <div className=\"actions\">\n        <div>\n          {props.number>1 ? <button className=\"prev\" onClick={props.prevQuestion}>Previous</button> : null}\n        </div>\n        <div>\n          {props.number<5 ? <button className=\"next\" onClick={props.nextQuestion}>Next</button> : null}\n          {props.number==5 ? <Link to='/wildlife-quiz/results'><button className=\"submit\">Submit</button></Link> : null}\n        </div>\n    </div>\n  </div>\n  );\n}\n\nexport default Question;","import React, { useEffect, useState} from 'react'\nimport Question from './question'\n\nconst Home = () => {\n\n  // Enable scrolling through questions\n  const [currentQuestion, setCurrentQuestion] = useState(1)\n  const nextQuestion = () => {\n    setCurrentQuestion(currentQuestion+1)\n  }\n  const prevQuestion = () => {\n    setCurrentQuestion(currentQuestion-1)\n  }\n  useEffect(() => {\n    const questions = document.querySelectorAll('.question');\n    questions.forEach(question => {\n      if(question.id==currentQuestion){\n        question.classList.add('active')\n      }\n      else{\n        question.classList.remove('active');\n      }\n    })\n  },[currentQuestion])\n\n  // Get data from local storage\n  useEffect(() => {\n    let myQuizAnswers= JSON.parse(localStorage.getItem('myQuizAnswers')) || [\n      {answer: '',score: 0},\n      {answer: '',score: 0},\n      {answer: '',score: 0},\n      {answer: '',score: 0},\n      {answer: '',score: 0}\n    ]\n    myQuizAnswers.forEach(question => {\n      if(question.answer){\n        document.querySelector(`#${question.answer}`).checked=true\n      }\n    })\n\n    // Save data to local storage\n    const questions = document.querySelectorAll('.question')\n    questions.forEach(question => {\n      let inputs = question.querySelectorAll('input');\n      inputs.forEach(input => {\n        input.addEventListener('change', () => {\n          if(input.checked===true){\n            myQuizAnswers[question.id - 1].answer = input.id\n            myQuizAnswers[question.id - 1].score = parseInt(input.value)\n            localStorage.setItem('myQuizAnswers', JSON.stringify(myQuizAnswers));\n          }\n        })\n      })\n    })\n  },[])\n\n  return (\n    <div>\n      <h2>Question {currentQuestion}</h2>\n      <div className=\"questions\">\n        <Question \n          number=\"1\"\n          active={true}\n          text=\"How long do tigers live in the wild?\" \n          answer1=\"5-10 years\"\n          answer1score=\"5\"\n          answer2=\"10-12 years\" \n          answer2score=\"10\"\n          answer3=\"12-15 years\"\n          answer3score=\"15\"\n          nextQuestion={nextQuestion}\n          prevQuestion={prevQuestion}\n          />\n        <Question \n          number=\"2\"\n          active={false}\n          text=\"How heavy is a great white shark?\" \n          answer1=\"Up to 1,500 kg\"\n          answer1score=\"10\"\n          answer2=\"Up to 2,250 kg\" \n          answer2score=\"15\"\n          answer3=\"Up to 4,000 kg\"\n          answer3score=\"5\"\n          nextQuestion={nextQuestion}\n          prevQuestion={prevQuestion}\n          />\n        <Question \n          number=\"3\"\n          active={false}\n          text=\"How long is a komodo dragon?\" \n          answer1=\"Up to 3m long\"\n          answer1score=\"15\"\n          answer2=\"Up to 2m long\" \n          answer2score=\"10\"\n          answer3=\"Up to 1m long\"\n          answer3score=\"5\"\n          nextQuestion={nextQuestion}\n          prevQuestion={prevQuestion}\n          />\n        <Question \n          number=\"4\"\n          active={false}\n          text=\"What's the wingspan of a steller's sea eagle?\" \n          answer1=\"1m\"\n          answer1score=\"10\"\n          answer2=\"2.5m\" \n          answer2score=\"15\"\n          answer3=\"5m\"\n          answer3score=\"5\"\n          nextQuestion={nextQuestion}\n          prevQuestion={prevQuestion}\n          />\n        <Question \n          number=\"5\"\n          active={false}\n          text=\"How long do Anaconda's live?\" \n          answer1=\"5-10 years\"\n          answer1score=\"5\"\n          answer2=\"10-30 years\" \n          answer2score=\"15\"\n          answer3=\"20-40 years\"\n          answer3score=\"10\"\n          nextQuestion={nextQuestion}\n          prevQuestion={prevQuestion}\n          />\n        </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { jsPDF } from \"jspdf\";\n\nconst Results = () => {\n  let myQuizAnswers= JSON.parse(localStorage.getItem('myQuizAnswers'))|| [\n    {answer: '',score: 0},\n    {answer: '',score: 0},\n    {answer: '',score: 0},\n    {answer: '',score: 0},\n    {answer: '',score: 0}\n  ]\n  let totalScore = 0;\n  myQuizAnswers.forEach(question => {\n    totalScore+= question.score;\n  });\n  let percentageScore = Math.round(totalScore/75*100);\n  let rating;\n  if(percentageScore<34){\n    rating = 'Below average'\n  } else if(percentageScore<67) {\n    rating = 'Average'\n  }\n  else{\n    rating = 'Above average'\n  };\n\n  const printPdf = () => {\n    const doc = new jsPDF();\n    doc.text(`Score: ${percentageScore}%`, 10, 10);\n    doc.text(`Rating: ${rating}`, 10, 20);\n    doc.save(\"a4.pdf\");\n  }\n\n  const clear = () => {\n    localStorage.clear()\n  }\n\n  return (\n    <div>\n      <h1>Results</h1>\n      <p>Score: {percentageScore}%</p>\n      <p>Rating: {rating}</p>\n      <div className=\"barChart\">\n        <div className=\"bar\">\n          <label htmlFor=\"q1\">Q1</label>\n          <progress id=\"q1\" value={myQuizAnswers[0].score} max=\"15\"></progress>\n        </div>\n        <div className=\"bar\">\n          <label htmlFor=\"q2\">Q2</label>\n          <progress id=\"q2\" value={myQuizAnswers[1].score} max=\"15\"></progress>\n        </div>\n        <div className=\"bar\">\n          <label htmlFor=\"q3\">Q3</label>\n          <progress id=\"q3\" value={myQuizAnswers[2].score} max=\"15\"></progress>\n        </div>\n        <div className=\"bar\">\n          <label htmlFor=\"q4\">Q4</label>\n          <progress id=\"q4\" value={myQuizAnswers[3].score} max=\"15\"></progress>\n        </div>\n        <div className=\"bar\">\n          <label htmlFor=\"q5\">Q5</label>\n          <progress id=\"q5\" value={myQuizAnswers[4].score} max=\"15\"></progress>\n        </div>\n      </div>\n      <button onClick={printPdf}>Print PDF</button>\n      <Link to=\"/\"><button>Amend your answers</button></Link>\n      <Link to=\"/\"><button onClick={clear}>Clear & start over</button></Link>\n    </div>\n  );\n}\n\nexport default Results;","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/home'\nimport Results from './components/results'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <h1>Animal Quiz</h1>\n        <Switch>\n          <Route exact path='/wildlife-quiz/' component={Home} />\n          <Route exact path='/wildlife-quiz/results' component={Results} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}